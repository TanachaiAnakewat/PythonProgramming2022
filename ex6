{"cells":[{"cell_type":"markdown","metadata":{"id":"ZiNtfd_RSIuJ"},"source":["# 第6回本課題\n","\n","[English version](https://colab.research.google.com/drive/1cXTGoRF8y7U4RYYAu9EZ308ilufMzJWg)"]},{"cell_type":"markdown","metadata":{"id":"uIIa7cQ1SIuN"},"source":["## Ex6-1. 日付を生成するイテレータ\n","\n","クラス `year_date` のコンストラクタは西暦年を引数とし、\n","そのオブジェクトは、その年の日付を西暦年と月と日のタプルとして生成するイテレータとします。\n","クラス `year_date` を定義してください。西暦年が閏年かどうかは、\n","400で割り切れるか、100で割り切れずに4で割り切れるかで判定してください。"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yuOaWI89SIuO"},"outputs":[],"source":["##########################################################\n","##  <[ ex6-1-year_date ]> 解答セル (Answer cell)\n","##  このコメントの書き変えを禁ず (Never edit this comment)\n","##########################################################\n","\n","QUESTION_EXISTS = False # 質問がある場合は True に変えて，このセル内のコメントとして質問を記述してください\n","                        # Change to True if you have questions, and describe them as comments in this cell\n","\n","class year_date:\n","  def __init__(self,year):\n","    self.now=[year,1,1]\n","    self.count=0\n","  def __iter__(self):\n","    return self\n","  def __next__(self):\n","    if self.count==0:\n","      self.count+=1\n","      return  (self.now[0],self.now[1],self.now[2])\n","    a=self.now\n","\n","    if a[2]==28 and a[1]==2 and not(a[0]%400==0 or (a[0]%100!=0 and a[0]%4==0)):\n","      self.now[1]=3\n","      self.now[2]=1\n","\n","    elif a[2]==29 and a[1]==2:\n","      self.now[1]=3\n","      self.now[2]=1\n","\n","    elif a[2]==30 and (a[1]==4 or a[1]==6 or a[1]==9 or a[1]==11):\n","      self.now[1]=a[1]+1\n","      self.now[2]=1\n","\n","    elif a[2]==31 and (a[1]==1 or a[1]==3 or a[1]==5 or a[1] ==7 or a[1]==8 or a[1]==10):\n","      self.now[1]+=1\n","      self.now[2]=1\n","\n","    elif a[1]==12 and a[2]==31:\n","      self.now[0]=a[0]+1\n","      self.now[1]=1\n","      self.now[2]=1\n","\n","    else:\n","      self.now[2]=a[2]+1\n","      \n","    if self.now[1]==1 and self.now[2]==1:\n","      raise StopIteration\n","    return (self.now[0],self.now[1],self.now[2])\n","      "]},{"cell_type":"markdown","metadata":{"id":"xcqCt924SIuP"},"source":["提出前に以下のテストセルを実行し、エラーがでないことを確認してください。"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"aRNn97KeSIuP"},"outputs":[],"source":["yd = year_date(2020)\n","assert next(yd) == (2020, 1, 1)\n","for _ in range(100):\n","    next(yd)\n","assert next(yd) == (2020, 4, 11)\n","yd = year_date(2021)\n","for _ in range(100):\n","    next(yd)\n","assert next(yd) == (2021, 4, 11)\n","yd = year_date(2024)\n","for _ in range(365):\n","    next(yd)\n","assert next(yd) == (2024, 12, 31)\n","try:\n","    next(yd)\n","    assert False\n","except StopIteration:\n","    pass"]}],"metadata":{"judge_submission":{"exercises":{"ex6-1-year_date":"24702569c4ce7591a09a0339c0489a8e62687357"},"extraction":true},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python"},"colab":{"provenance":[{"file_id":"1Gh4tWLskJD-lvjRiZhg3drTIAfXE8ruL","timestamp":1669457282502},{"file_id":"1oskcIHv1cCniYXhmEvjKz3d5iUr3WkUP","timestamp":1653583942595}]}},"nbformat":4,"nbformat_minor":0}